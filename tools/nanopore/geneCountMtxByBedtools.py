import pandas as pd
import sh
import click
from jpy_tools.nanoporeTools import bedtoolsGetIntersect

@click.command()
@click.option('-b', 'inBam')
@click.option('--bed', 'path_bed')
@click.option('-o', 'dir_out')
@click.option('-r', 'path_read')
@click.option('-c', 'cutoff', type=float, default=0.8, show_default=True)
@click.option('--bedtools', 'bedtoolsPath', default='bedtools', show_default=True)
def main(
    inBam,
    path_bed,
    dir_out,
    path_read,
    cutoff=0.8,
    bedtoolsPath="bedtools",
):
    """
    \b
    use bedtools get intersect information between bam and bed, then calculate expression matrix

    \b
    Parameters
    ----------
    -b, inBam
    --bed, path_bed
        generated by `gtfToBed12_addGeneName.py`
    -o, dir_out
    -r, path_read :
        could be fasta or fastq
    -c, cutoff : 
        coverage ratio cutoff, by default 0.8
    --bedtools, bedtoolsPath : str, optional
        by default "bedtools"
    """    
    df = bedtoolsGetIntersect(
        inBam,
        path_bed,
        path_read,
        onlyGene=True,
        bedtoolsPath=bedtoolsPath
    )
    df.eval("covRatio = cov / readLength", inplace=True)
    df.query(f"covRatio >= {cutoff}", inplace=True)

    df_mtx = df.pivot_table("Name", "geneName", "mapStrand", aggfunc="count").fillna(0)
    
    sh.mkdir(dir_out, p=True)
    df.to_csv(f"{dir_out}/bedtoolsIntersect.tsv", sep="\t", index=None)
    df_mtx.to_csv(f"{dir_out}/mtx.tsv", sep="\t")

if __name__ == "__main__":
    main()